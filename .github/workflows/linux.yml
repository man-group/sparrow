name: Linux
on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [main]
concurrency:
  group: ${{ github.workflow }}-${{ github.job }}-${{ github.ref }}
  cancel-in-progress: true
defaults:
  run:
    shell: bash -e -l {0}
jobs:
  build:
    runs-on: ubuntu-20.04
    name: ${{ matrix.sys.compiler }} ${{ matrix.sys.version }}
    strategy:
      fail-fast: false
      matrix:
        sys:
        - {compiler: clang, version: '16', config-flags: '-DCMAKE_CXX_FLAGS=-stdlib=libc++'}
        - {compiler: clang, version: '17', config-flags: '-DCMAKE_CXX_FLAGS=-stdlib=libc++'}
        - {compiler: gcc, version: '13', config-flags: ''}

    steps:


    # We need a recent gcc install for clang too to find it's standard library by default
    - name: Install GCC
      uses: egor-tensin/setup-gcc@v1
      with:
        version: ${{matrix.sys.version}}
        platform: x64


    - name: Install LLVM and Clang
      if: matrix.sys.compiler == 'clang'
      uses: egor-tensin/setup-clang@v1
      with:
        version: ${{matrix.sys.version}}
        platform: x64

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set conda environment
      uses: mamba-org/setup-micromamba@main
      with:
        environment-name: myenv
        environment-file: environment-dev.yml
        init-shell: bash
        cache-downloads: true

    - name: Configure using CMake
      run: cmake -G Ninja -Bbuild ${{matrix.sys.config-flags}} -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX -DBUILD_TESTS=ON

    - name: Install
      working-directory: build
      run: cmake --install .

    - name: Build
      working-directory: build
      run: cmake --build . --target test_sparrow_lib --parallel 8

    - name: Run tests
      working-directory: build
      run: ./test/test_sparrow_lib
