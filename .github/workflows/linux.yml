
name: Linux
on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [main]
concurrency:
  group: ${{ github.workflow }}-${{ github.job }}-${{ github.ref }}
  cancel-in-progress: true
defaults:
  run:
    shell: bash -e -l {0}
jobs:
  build:
    runs-on: ${{ matrix.sys.image }}
    name: ${{ matrix.sys.compiler }} / ${{ matrix.sys.version }} / ${{ matrix.sys.stdlib }} / ${{ matrix.sys.arch }} / ${{ matrix.config.name }} / date-polyfill ${{ matrix.sys.date-polyfill}} / shared ${{ matrix.sys.shared }}
    env:
      SCCACHE_GHA_ENABLED: "true"
    strategy:
      fail-fast: false
      matrix:
        sys:
        - {image: ubuntu-24.04, compiler: clang, version: '17', config-flags: '', arch: '64', stdlib: 'libstdc++-12', date-polyfill: 'ON', shared : 'ON'}
        # - {compiler: clang, version: '17', config-flags: '-DCMAKE_CXX_FLAGS=-stdlib=libc++', stdlib: 'libc++-17', date-polyfill: 'ON' }
        - {image: ubuntu-24.04, compiler: clang, version: '18', config-flags: '', arch: '64', stdlib: 'libstdc++-12', date-polyfill: 'ON', shared : 'ON'}
        # - {compiler: clang, version: '16', config-flags: '-DCMAKE_CXX_FLAGS=-stdlib=libc++', stdlib: 'libc++-17', date-polyfill: 'ON' }

        - {image: ubuntu-24.04, compiler: gcc, version: '12', config-flags: '', arch: '64', date-polyfill: 'ON', shared : 'ON'}
        - {image: ubuntu-24.04, compiler: gcc, version: '13', config-flags: '', arch: '64', date-polyfill: 'ON', shared : 'ON'}
        - {image: ubuntu-24.04, compiler: gcc, version: '13', config-flags: '', arch: '64', date-polyfill: 'ON', shared : 'OFF'}
        - {image: ubuntu-24.04, compiler: gcc, version: '13', config-flags: '', arch: '64', date-polyfill: 'OFF', shared : 'ON'}

        - {image: ubuntu-24.04, compiler: gcc, version: '13', config-flags: '', arch: '32', date-polyfill: 'OFF', shared : 'ON'}

        config:
        - {name: Debug}
        - {name: Release}

    steps:

    - name: Run sccache-cache
      uses: mozilla-actions/sccache-action@v0.0.6

    - name: Install GCC
      if: matrix.sys.compiler == 'gcc'
      uses: egor-tensin/setup-gcc@v1
      with:
        version: ${{matrix.sys.version}}
        platform: x64

    - name: Install LLVM and Clang
      if: matrix.sys.compiler == 'clang'
      uses: KyleMayes/install-llvm-action@v2
      with:
        version: ${{matrix.sys.version}}
        arch: x64

    - name: Install 32bit support
      if: matrix.sys.arch == '32'
      run: sudo apt-get install gcc-multilib g++-multilib

    - name: Install the specified standard library for clang
      if: matrix.sys.compiler == 'clang'
      run: sudo apt install ${{matrix.sys.stdlib}}-dev -y

    - name: Install specific version of tzdata
      if: matrix.sys.date-polyfill == 'OFF'
      run: sudo apt-get install tzdata=2024a-2ubuntu1 -y --allow-downgrades

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set conda environment
      uses: mamba-org/setup-micromamba@main
      with:
        environment-name: myenv
        environment-file: environment-dev.yml
        init-shell: bash
        cache-downloads: true

    - name: Configure using CMake
      run: |
        if [[ "${{matrix.sys.arch}}" = 32 ]]; then export CXXFLAGS=-m32 ; export CFLAGS=-m32; fi
        cmake -G Ninja \
          -Bbuild ${{matrix.sys.config-flags}} \
          -DCMAKE_BUILD_TYPE:STRING=${{matrix.config.name}} \
          -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX \
          -DUSE_DATE_POLYFILL=${{matrix.sys.date-polyfill}} \
          -DBUILD_TESTS=ON \
          -DBUILD_EXAMPLES=ON \
          -DCMAKE_C_COMPILER_LAUNCHER=sccache \
          -DCMAKE_CXX_COMPILER_LAUNCHER=sccache \
          -DFETCH_DEPENDENCIES_WITH_CMAKE=MISSING \
          -DSPARROW_BUILD_SHARED=${{matrix.sys.shared}}

    - name: Build library
      working-directory: build
      run: cmake --build . --config ${{matrix.config.name}} --target sparrow --parallel 8

    - name: Install
      working-directory: build
      run: cmake --install . --config ${{matrix.config.name}}

    - name: Build tests
      working-directory: build
      run: cmake --build . --config ${{matrix.config.name}} --target test_sparrow_lib --parallel 8

    - name: Run sccache stat for check
      shell: bash
      run: ${SCCACHE_PATH} --show-stats

    - name: Run tests
      working-directory: build
      run: |
        cmake --build . --config ${{matrix.config.name}} --target run_tests_with_junit_report

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: test_sparrow_lib_report_Linux_${{ matrix.sys.compiler }}_${{ matrix.sys.version }}_${{ matrix.sys.stdlib }}_${{ matrix.config.name }}_m${{ matrix.sys.arch}}_date-polyfill_${{ matrix.sys.date-polyfill}}_shared_${{ matrix.sys.shared }}
        path: ./**/test*.xml
        if-no-files-found: error

    - name: Run all examples
      working-directory: build
      run: cmake --build . --config ${{matrix.config.name}} --target run_examples

