name: OSX
on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [main]
concurrency:
  group: ${{ github.workflow }}-${{ github.job }}-${{ github.ref }}
  cancel-in-progress: true
defaults:
  run:
    shell: bash -e -l {0}
jobs:
  build:
    runs-on: macos-${{ matrix.os }}
    name: ${{ matrix.os }}-${{ matrix.config.name }}-${{ matrix.compiler }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - 13
        - 14
        config:
        - { name: Debug }
        - { name: Release }
        compiler:
        # - clang # TODO: Uncomment this line when we have fixed the compilation issue
        - apple-clang

    steps:

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Add specification of clang++ in the conda environment specification
      if: matrix.compiler == 'clang'
      run: |
        echo "  - clangxx==17.0.6" >> environment-dev.yml

    - name: Set conda environment
      uses: mamba-org/setup-micromamba@main
      with:
        environment-name: myenv
        environment-file: environment-dev.yml
        init-shell: bash
        cache-downloads: true

    - name: Use clang++ from conda-forge
      if: matrix.compiler == 'clang'
      run: |
        echo "CXX=$CONDA_PREFIX/bin/clang++" >> $GITHUB_ENV
        echo "CMAKE_CXX_COMPILER=$CONDA_PREFIX/bin/clang++" >> $GITHUB_ENV

    - name: Use Apple Clang (i.e. clang++ from Xcode)
      if: matrix.compiler == 'apple-clang'
      run: |
        echo "CXX=/usr/bin/clang++" >> $GITHUB_ENV
        echo "CMAKE_CXX_COMPILER=/usr/bin/clang++" >> $GITHUB_ENV

    - name: Configure using CMake
      run: cmake -Bbuild -DCMAKE_BUILD_TYPE:STRING=${{matrix.config.name}} -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX -DBUILD_TESTS=ON

    - name: Install
      working-directory: build
      run: cmake --install . --config ${{matrix.config.name}}

    - name: Build
      working-directory: build
      run: cmake --build . --config ${{matrix.config.name}} --target test_sparrow_lib --parallel 8

    - name: Run tests
      working-directory: build
      run: ctest -C ${{matrix.config.name}} --output-on-failure
