name: cpp-linter-analysis

on: [push, pull_request]

defaults:
  run:
    shell: bash -e -l {0}
jobs:
  build:
    runs-on: ubuntu-latest
        
    steps:
    - name: Install LLVM and Clang
      uses: egor-tensin/setup-clang@v1
      with:
        version: 18
        platform: x64
    
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Checkout nanoarrow
      uses: actions/checkout@v4
      with:
        repository: apache/arrow-nanoarrow
        path: dependencies/tests/nanoarrow

    - name: Set conda environment
      uses: mamba-org/setup-micromamba@main
      with:
        environment-name: myenv
        environment-file: environment-dev.yml
        init-shell: bash
        cache-downloads: true

    - name: Configure nanoarrow
      working-directory: dependencies/tests/nanoarrow
      run: | 
        cmake -G Ninja \
          -Bbuild \
          ${{matrix.sys.config-flags}} \
          -DCMAKE_BUILD_TYPE:STRING=Release \
          -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX

    - name: Build nanoarrow
      working-directory: dependencies/tests/nanoarrow/build
      run: cmake --build . --config Release --target install

    - name: Configure using CMake
      run: cmake -G Ninja -Bbuild -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX -DBUILD_TESTS=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

    - name: Run C++ analysis
      uses: cpp-linter/cpp-linter-action@v2
      id: linter
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        version: 18
        files-changed-only: false
        database: 'build'
        style: 'file'  # Use .clang-format config file
        tidy-checks: '' # Use .clang-tidy config file
        step-summary: true
        ignore: 'build'
        extra-args: '-std=c++20'